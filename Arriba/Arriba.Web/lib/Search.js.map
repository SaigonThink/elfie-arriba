{"version":3,"sources":["../configuration/AssetDetails.jsx","../configuration/zConfiguration.jsx","../configuration/_ConfluxComponents.jsx","../jsx/AddColumnList.jsx","../jsx/InfiniteScroll.jsx","../jsx/QueryStats.jsx","../jsx/ResultDetails.jsx","../jsx/ResultListing.jsx","../jsx/SearchHeader.jsx","../jsx/SplitPane.jsx","../jsx/SyntaxHelp.jsx","../jsx/zDefaultConfiguration.jsx","../jsx/zGrid.jsx","../jsx/zSearch.jsx","../jsx/_Components.jsx"],"names":[],"mappings":"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","file":"Search.js","sourcesContent":["﻿var PatchComplianceSummary = React.createClass({\r\n    render: function () {\r\n        if (this.props.data[\"IsPatchCompliant\"]) return <div><span className=\"good-icon icon\" title=\"IsPatchCompliant:1\" />Patch Compliant</div>;\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <span className=\"error-icon icon\" /><b>Not Patch Compliant</b>\r\n                    <DetailReportLink url=\"https://insights/Report?id=07e846a5-a100-498b-8fe0-68a907b695cc&isPublished=true#assetName={ID}&_tab=0\" id={this.props.data[\"Name\"]} title=\"Patch Compliance Summary\" />\r\n                </div>\r\n                <table className=\"smallTable\">\r\n                    <thead><tr><td>&nbsp;</td><td>Sev 5</td><td>Sev 4</td><td>Sev 3</td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Out-of-Cycle</td>\r\n                            <td className=\"n\"><BadUnlessZero value={this.props.data[\"Sev5_OutCycleCount\"]} columnName=\"Sev5_OutCycleCount\" /></td>\r\n                            <td className=\"n\"><BadUnlessZero value={this.props.data[\"Sev4_OutCycleCount\"]} columnName=\"Sev4_OutCycleCount\" /></td>\r\n                            <td className=\"n\"><BadUnlessZero value={this.props.data[\"Sev3_OutCycleCount\"]} columnName=\"Sev3_OutCycleCount\" /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Third Party</td>\r\n                            <td className=\"n\"><BadUnlessZero value={this.props.data[\"Sev5_ThirdPartyCount\"]} columnName=\"Sev5_ThirdPartyCount\" /></td>\r\n                            <td className=\"n\"><BadUnlessZero value={this.props.data[\"Sev4_ThirdPartyCount\"]} columnName=\"Sev4_ThirdPartyCount\" /></td>\r\n                            <td className=\"n\"><BadUnlessZero value={this.props.data[\"Sev3_ThirdPartyCount\"]} columnName=\"Sev3_ThirdPartyCount\" /></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nvar AVSummary = React.createClass({\r\n    render: function () {\r\n        // If no AntiVirus, just report that\r\n        if(!this.props.data[\"HasAV\"]) return <RiskMarker condition={!this.props.data[\"HasAV\"]} columnName=\"HasAV\" label=\"AV Missing\" />;\r\n\r\n        // Otherwise, consider details\r\n        return (\r\n            <div>\r\n                <DetailsField value={this.props.data[\"AVName\"]} columnName=\"AVName\" label=\"AV\" id={this.props.data[\"Name\"]} url=\"https://insights/Report?id=07e846a5-a100-498b-8fe0-68a907b695cc&isPublished=true#assetName={ID}&_tab=2\" url-title=\"AV Details\" />\r\n                <RelativeDateTime value={this.props.data[\"LatestScanDate\"]} columnName=\"LatestScanDate\" label=\"Last Scan\" />\r\n                <RiskMarker condition={!this.props.data[\"IsScanned\"]} columnName=\"IsScanned\" label=\"Unscanned\" />\r\n                <RiskMarker condition={!this.props.data[\"HasAuthenticatedScan\"]} columnName=\"HasAuthenticatedScan\" label=\"Unauthenticated Scan\" />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nvar MonitoringSummary = React.createClass({\r\n    render: function () {\r\n        // If not monitored, just say that\r\n        if (!this.props.data[\"IsMonitored\"]) return <RiskMarker condition={!this.props.data[\"IsMonitored\"]} columnName=\"IsMonitored\" label=\"Unmonitored\" />;\r\n\r\n        // Otherwise, consider details\r\n        return <RelativeDateTime value={this.props.data[\"LatestMonitoredDate\"]} columnName=\"LatestMonitoredDate\" label=\"Last Monitored\" />;\r\n    }\r\n});\r\n\r\n// AssetDetails shows details for an asset specifically when clicked.\r\nvar AssetDetails = React.createClass({\r\n    getInitialState: function() {\r\n        return { allTableShown: true };\r\n    },\r\n    handleClose: function () {\r\n        this.props.onClose();\r\n    },\r\n    toggle: function() {\r\n        this.setState({ allTableShown: !this.state.allTableShown });\r\n    },\r\n    render: function () {\r\n        if (!this.props.itemId) return null;\r\n        if (!this.props.data) return null;\r\n\r\n        var fullTeam = [];\r\n\r\n        fullTeam.push(<DetailsField value={this.props.data[\"S1\"]} columnName=\"S1\" inline=\"true\" />);\r\n        if (this.props.data[\"S2\"]) {\r\n            fullTeam.push(\" | \");\r\n            fullTeam.push(<DetailsField value={this.props.data[\"S2\"]} columnName=\"S2\" inline=\"true\" />);\r\n        }\r\n\r\n        if (this.props.data[\"S3\"]) {\r\n            fullTeam.push(\" | \");\r\n            fullTeam.push(<DetailsField value={this.props.data[\"S3\"]} columnName=\"S3\" inline=\"true\" />);\r\n        }\r\n\r\n        if (this.props.data[\"S4\"]) {\r\n            fullTeam.push(\" | \");\r\n            fullTeam.push(<DetailsField value={this.props.data[\"S4\"]} columnName=\"S4\" inline=\"true\" />);\r\n        }\r\n\r\n        var allTableToggle = <span className=\"icon-chevron-down-bold clickable\" onClick={this.toggle} />;\r\n        var detailsTable = null;\r\n\r\n        if (this.state.allTableShown) {\r\n            allTableToggle = <span className=\"icon-chevron-up-bold clickable\" onClick={this.toggle} />;\r\n            detailsTable = (<DetailsTable \r\n                                data={this.props.data} \r\n                                table={this.props.table}\r\n                                query={this.props.query}\r\n                                onAddClause={this.props.onAddClause}\r\n            />);\r\n        }\r\n\r\n        var baselineIcon = <div><span className=\"good-icon icon\" title=\"IsBaseline:1\" />Baseline</div>;\r\n        if (!this.props.data[\"IsBaseline\"]) baselineIcon = <div><span className=\"warn-icon icon\" title=\"IsBaseline:0\" />Not Baseline</div>;\r\n\r\n        return (\r\n            <div className=\"details\">\r\n                <div className=\"commands\">\r\n                    <DetailReportLink url=\"https://insights/Report?id=5337be64-6142-4dec-8191-711c3043d2bb&isPublished=true#assetName={ID}&_tab=0\" id={this.props.data[\"Name\"]} title=\"Insights Asset Detail\" />\r\n                    <span className=\"icon icon-cancel\" onClick={this.handleClose} />\r\n                </div>\r\n                <div className=\"detailHeader\">\r\n                    <div className=\"detailTitle font-light\">{this.props.itemId}</div>\r\n                    <DetailsField value={\".\" + this.props.data[\"Domain\"]} columnName=\"Domain\" inline=\"true\" />\r\n                    <DetailsField value={this.props.data[\"OU\"]} columnName=\"OU\" />\r\n                    <div className=\"overviewBoxes\">\r\n                        <div className=\"box\">\r\n                            Asset\r\n                            <div className=\"indent\">\r\n                                <DetailsField value={this.props.data[\"IP\"]} columnName=\"IP\" label=\"IP\" />\r\n                                <DetailsField value={this.props.data[\"Type\"]} columnName=\"Type\" />\r\n                                <DetailsField value={this.props.data[\"OSVersion\"]} columnName=\"OSVersion\" label=\"OS\" />\r\n                                <DetailsField value={this.props.data[\"Environment\"]}  columnName=\"Environment\" label=\"Env\" />\r\n                                <DetailsField value={this.props.data[\"Asset_Source\"]}  columnName=\"Asset_Source\" label=\"Source\" />\r\n                                <DetailsField value={this.props.data[\"XpertRole\"]}  columnName=\"XPertRole\" label=\"XPert Role\" />\r\n                            </div>\r\n                            <br />\r\n\r\n                            Ownership\r\n                            <div className=\"indent\">\r\n                                <div><span>Org:</span> {fullTeam}</div>\r\n                                <MailLink to={this.props.data[\"ServiceOwner\"]} columnName=\"ServiceOwner\" subject={this.props.itemId} label=\"FTE\" />\r\n                                <MailLink to={this.props.data[\"ServiceOwnerOperations\"]} columnName=\"ServiceOwnerOperations\" subject={this.props.itemId} label=\"Ops\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"box\">\r\n                            Status\r\n                            <div className=\"indent\">\r\n                                {baselineIcon}                                \r\n                                <DetailsField value={this.props.data[\"SecurityRisk\"]} columnName=\"SecurityRisk\" label=\"Security Risk\" />\r\n                                <AVSummary data={this.props.data} />\r\n                                <MonitoringSummary data={this.props.data} />\r\n                                <RiskMarker condition={this.props.data[\"IsEdge\"]} columnName=\"IsEdge\" label=\"Edge\" />\r\n                                <RiskMarker condition={this.props.data[\"IsDualHomed\"]} columnName=\"IsDualHomed\" label=\"Dual-Homed\" />\r\n                                <PatchComplianceSummary data={this.props.data} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"box\">\r\n                        {allTableToggle}\r\n                        {detailsTable}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\n","﻿// zConfiguration.jsx contains configuration settings to configure this instance.\r\n//  Until the site is fixed to use a proper require() model, this must be after the components [ResultListing] and before the modes [zGrid, zSearch] \r\n\r\nvar configuration = {\r\n    // Arriba Service URL to query\r\n    //url: window.location.protocol + '//' + window.location.hostname + \":42784\",\r\n    url: \"https://confluxsearch:42785\",\r\n\r\n    // Name of tool to show [top right and elsewhere]\r\n    toolName: \"Conflux\",\r\n\r\n    // Theme to use [see theme.css for options and to define others]\r\n    theme: \"theme-green\",\r\n\r\n    // E-Mail addresses to whom feedback should go\r\n    feedbackEmailAddresses: \"v-scolo@microsoft.com;mikefan@microsoft.com\",\r\n\r\n    // Listing: Default Columns and Sort Order to show per table\r\n    listingDefaults: {\r\n        \"Asset\": { columns: [\"Name\", \"IP\"], sortColumn: \"Name\", sortOrder: \"asc\" },\r\n        \"Employee\": { columns: [\"Alias\", \"Name\"], sortColumn: \"Alias\", sortOrder: \"asc\" },\r\n        \"AzureSubscription\": { columns: [\"SubscriptionId\", \"Name\"], sortColumn: \"Name\", sortOrder: \"asc\" }\r\n    },\r\n\r\n    // Listing: Default details\r\n    customDetailsProviders: {\r\n        \"Asset\": AssetDetails\r\n    },\r\n\r\n    // Grid: Pre-built Grid queries\r\n    gridDefaultQueries: {\r\n        \"Clear\": {},\r\n        \"Scorecard\": {\r\n            query: \"IsBaseline=1\",\r\n            currentTable: \"Asset\",\r\n            rows: [\"HasAuthenticatedScan=1\", \"IsPatchCompliant=1\", \"LatestScanDate > today-7\", \"IsMFA=1\", \"IsJIT=1\", \"IsDualHomed=0\", \"IsMonitored=1\"],\r\n            rowLabels: [\"1.2 Vulnerability Scanning Coverage\", \"1.3 Scanned Servers with no Critical Vulns\", \"1.5 Servers with AV Installed & Scanned < 24 hrs\", \"2.2 Machines with MFA Implemented\", \"2.3 Environment Requiring JIT\", \"2.5 Non-Dual-Homed Assets\", \"3.1 Monitoring Coverage\"],\r\n            cols: [\"S1=\\\"Universal Store\\\"\", \"S1=Xbox\", \"S1=Core\", \"S1=MDG\"],\r\n            colLabels: [\"Uni Store All\", \"XSO All\", \"Core All\", \"Devices All\"],\r\n            showPortionOf: \"col\"\r\n        },\r\n        \"Fixcard\": {\r\n            query: \"IsBaseline=1\",\r\n            currentTable: \"Asset\",\r\n            rows: [\"!HasAuthenticatedScan=1\", \"!IsPatchCompliant=1\", \"!LatestScanDate > today-7\", \"!IsMFA=1\", \"!IsJIT=1\", \"!IsDualHomed=0\", \"!IsMonitored=1\"],\r\n            rowLabels: [\"NOT 1.2 Vulnerability Scanning Coverage\", \"NOT 1.3 Scanned Servers with no Critical Vulns\", \"NOT 1.5 Servers with AV Installed & Scanned < 24 hrs\", \"NOT 2.2 Machines with MFA Implemented\", \"NOT 2.3 Environment Requiring JIT\", \"NOT 2.5 Non-Dual-Homed Assets\", \"NOT 3.1 Monitoring Coverage\"],\r\n            cols: [\"S1=\\\"Universal Store\\\"\", \"S1=Xbox\", \"S1=Core\", \"S1=MDG\"],\r\n            colLabels: [\"Uni Store All\", \"XSO All\", \"Core All\", \"Devices All\"],\r\n            showPortionOf: \"col\"\r\n        }\r\n    },\r\n\r\n    // Content to show before a query is typed\r\n    splashContent: (\r\n        <div>\r\n            ConfluxSearch is an instant-searchable index of Asset, Employee, and Administrator data.\r\n            <div className=\"smaller\">\r\n                This information is highly sensitive. You may see a limited view of the information depending on permissions.\r\n            </div>\r\n        </div>\r\n    ),\r\n\r\n    // Content to show if query fails due to access denied (401)\r\n    accessDeniedContent: (\r\n        <span>\r\n            Access to ConfluxSearch denied. To request access to the overall site, please join <a target=\"_blank\" href=\"https://idweb/IdentityManagement/aspx/common/GlobalSearchResult.aspx?searchtype=e0c132db-08d8-4258-8bce-561687a8a51e&content=Conflux Report Reader\">Conflux Report Reader</a>.\r\n            Some content is restricted to other groups.\r\n        </span>\r\n    ),\r\n\r\n    // Content to show if query fails because service is unavailable (404, 500)\r\n    serviceUnavailableContent: (\r\n        <span>\r\n            ConfluxSearch is currently unavailable. Please <a href=\"mailto:v-scolo@microsoft.com;mikefan@microsoft.com&subject=ConfluxSearch%20Unavailable\">report</a> this issue.\r\n        </span>\r\n    )\r\n};\r\n","﻿// Create a styled link to another report\r\nvar DetailReportLink = React.createClass({\r\n    urlReplace: function (urlFormat, id) {\r\n        var idForUrl = encodeURIComponent(id);\r\n        return urlFormat.replace(/{ID}/, idForUrl);\r\n    },\r\n    render: function () {\r\n        return <a className=\"detailLink\" target=\"_blank\" href={this.urlReplace(this.props.url, this.props.id)} title={this.props.title}><span className=\"icon-open-new-windows\" /></a>;\r\n    }\r\n});\r\n\r\n// Creates a mailto link for the given 'to' address and optional subject, safely escaping and stripping highlight\r\nvar MailLink = React.createClass({\r\n    render: function () {\r\n        var mailToUrl = \"mailto:\" + encodeURIComponent(stripHighlight(this.props.to));\r\n        var parameters = {\r\n            subject: stripHighlight(this.props.subject),\r\n            body: window.location.href\r\n        };\r\n        mailToUrl += buildUrlParameters(parameters);\r\n\r\n        var content = <a href={mailToUrl} title={this.props.columnName + ':' + stripHighlight(this.props.to)} dangerouslySetInnerHTML={highlight(this.props.to)} />;\r\n        if (this.props.bold !== \"false\") content = <b>{content}</b>;\r\n\r\n        var label = null;\r\n        if (this.props.label) label = <span>{this.props.label + \": \"}</span>\r\n\r\n        return <div>{label} {content}</div>;\r\n    }\r\n});\r\n\r\n// Writes out a field with label and highlighting, but only if the value is set\r\nvar DetailsField = React.createClass({\r\n    render: function () {\r\n        if (!this.props.value || this.props.value === \"N/A\" || this.props.value === \"Unknown\") return null;\r\n\r\n        var link = null;\r\n        if(this.props.url) link = <DetailReportLink url={this.props.url} id={this.props.id} title={this.props[\"url-title\"]} />;\r\n\r\n        var content = <span dangerouslySetInnerHTML={highlight(this.props.value)} title={this.props.columnName + ':' + stripHighlight(this.props.value)} />;\r\n        if (this.props.bold) content = <b>{content}</b>;\r\n\r\n        var label = null;\r\n        if (this.props.label) label = <span>{this.props.label + \": \"}</span>;\r\n\r\n        if (this.props.inline === \"true\") {\r\n            return <span>{label} {content}{link}</span>\r\n        } else {\r\n            return <div>{label} {content}{link}</div>\r\n        }\r\n    }\r\n});\r\n\r\n// RiskMarker emits an inline value with a red exclamation point if the given condition is\r\nvar RiskMarker = React.createClass({\r\n    render: function () {\r\n        if (!this.props.condition) return null;\r\n        return <div><span className=\"error-icon icon\" title={this.props.columnName} /><b>{this.props.label}</b></div>;\r\n    }\r\n});\r\n\r\n// RiskNumber emits a number which is red if not zero\r\nvar BadUnlessZero = React.createClass({\r\n    render: function () {\r\n        if (!this.props.value || this.props.value.toString() === \"0\") return <span title={this.props.columnName + ':0' }>0</span>;\r\n        return <b title={this.props.columnName + ':' + this.props.value }>{this.props.value}</b>;\r\n    }\r\n});\r\n\r\n// RelativeDateTime writes a DateTime in terms of now (ex: 3 days ago), and highlights it yellow if over 2.5 days and red if over 6.5 days.\r\nvar RelativeDateTime = React.createClass({\r\n    render: function () {\r\n        var label = null;\r\n        if (this.props.label) label = <span>{this.props.label + \" \"}</span>;\r\n\r\n        if (!this.props.value) {\r\n            return <div><span className=\"error-icon icon\" />{label} Unknown</div>\r\n        }\r\n\r\n        var dateTime = moment(this.props.value);\r\n        var howLongSince = moment.duration(moment().diff(dateTime));\r\n\r\n        var prefix = null;\r\n        if (howLongSince.asDays() > 6.5) {\r\n            prefix = <span className=\"error-icon icon\" />;\r\n        } else if (howLongSince.asDays() > 2.5) {\r\n            prefix = <span className=\"warn-icon icon\" />;\r\n        }\r\n\r\n        var content = <span>{dateTime.fromNow()}</span>;\r\n        if(prefix) content = <b>{dateTime.fromNow()}</b>;\r\n\r\n        return <div title={this.props.columnName + ':' + this.props.value}>{prefix}{label}{content}</div>;\r\n    }\r\n});","﻿// AddColumnList is the list of unselected columns which shows up in the listing when the '+' is clicked.\r\nvar AddColumnList = React.createClass({\r\n    getInitialState: function () {\r\n        return { filter: null, filteredColumns: this.filterColumns(null), selectedIndex: 0 }\r\n    },\r\n    filterColumns: function (filter) {\r\n        if (!filter) filter = \"\";\r\n        filter = filter.toLowerCase();\r\n\r\n        var filteredColumns = [];\r\n        for (var i = 0; i < this.props.allColumns.length; ++i) {\r\n            var column = this.props.allColumns[i];\r\n\r\n            // Filter columns already added and those not starting with the filter\r\n            if (this.props.currentColumns.indexOf(column.name) !== -1) continue;\r\n            if (filter && column.name.toLowerCase().indexOf(filter) !== 0) continue;\r\n\r\n            filteredColumns.push(column.name);\r\n        }\r\n\r\n        return filteredColumns;\r\n    },\r\n    handleKeyDown: function (e) {\r\n        if (e.keyCode === 27) {\r\n            // ESC - Close AddColumnList\r\n            this.setState(this.getInitialState());\r\n            this.props.onAddColumn(null);\r\n            e.stopPropagation();\r\n        } else if (e.keyCode === 13 || e.keyCode === 9) {\r\n            // ENTER/TAB - commit highlighted match\r\n            var currentColumn = this.state.filteredColumns[this.state.selectedIndex];\r\n            if(currentColumn) this.props.onAddColumn(currentColumn);\r\n            e.stopPropagation();\r\n        } else if (e.keyCode === 38) {\r\n            // Up Arrow - select previous\r\n            this.setState({ selectedIndex: (this.state.selectedIndex <= 0 ? 0 : this.state.selectedIndex - 1) });\r\n            e.stopPropagation();\r\n        } else if (e.keyCode === 40) {\r\n            // Down Arrow - select next\r\n            this.setState({ selectedIndex: (this.state.selectedIndex >= this.state.filteredColumns.length ? this.state.filteredColumns.length - 1 : this.state.selectedIndex + 1) });\r\n            e.stopPropagation();\r\n        }\r\n    },\r\n    handleAddColumn: function (e) {\r\n        this.props.onAddColumn(e.target.getAttribute(\"data-name\"));\r\n        e.stopPropagation();\r\n    },\r\n    handleFilterChanged: function (e) {\r\n        var newFilter = e.target.value;\r\n        var newFilteredColumns = this.filterColumns(newFilter);\r\n        this.setState({ filter: newFilter, filteredColumns: newFilteredColumns, selectedIndex: 0 });\r\n    },\r\n    render: function () {\r\n        // Write an add column list (shown only once the '+' is clicked)\r\n        if (!this.props.showing) return null;\r\n\r\n        var addFunction = this.handleAddColumn;\r\n        var addColumns = [];\r\n        for(var i = 0; i < this.state.filteredColumns.length; ++i) {\r\n            var name = this.state.filteredColumns[i];\r\n            var className = (i === this.state.selectedIndex ? \"add-list-selected\" : \"\");\r\n            addColumns.push(<div key={\"add_\" + name} data-name={name} onClick={addFunction} className={className}>{name}</div>);\r\n        }\r\n\r\n        return (\r\n            <div style={{position: \"absolute\"}}>\r\n                <div className=\"add-list\" onKeyDown={this.handleKeyDown} >\r\n                    <input type=\"text\" autoFocus placeholder=\"Filter\" value={this.state.filter} onChange={this.handleFilterChanged} onKeyDown={this.handleKeyDown} />\r\n                    {addColumns}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});","﻿// InfiniteScroll provides infinite scrolling support.\r\n/* Usage:\r\n    <InfiniteScroll page={this.state.page} hasMoreData={this.state.hasMoreData} loadMore={this.getResultsPage}>\r\n        {content}\r\n    </InfiniteScroll>\r\n\r\n    Page identifies the integer page of items loaded so far, starting at zero.\r\n    When scrolling is required, loadMore will be called for page+1.\r\n    Page updating on the InfiniteScroll class tells it that it can call loadMore again (the previous loadMore is complete).\r\n    hasMoreData is set to false when there are no more items to load and loadMore should no longer be called.\r\n*/\r\nvar InfiniteScroll = React.createClass({\r\n    handleScroll: function (e) {\r\n        var element = e.target;\r\n        if (e.target === this.refs.scrollContainer) {\r\n            var pixelsFromBottom = (element.scrollHeight - element.clientHeight - element.scrollTop);\r\n\r\n            if (pixelsFromBottom < 200) {\r\n                // Remove this listener to avoid multiple loadMore calls\r\n                // \"page\" changing in the caller will cause this to re-render and be re-attached\r\n                e.target.removeEventListener(\"onScroll\", this.handleScroll);\r\n\r\n                // Load the next page of items\r\n                if (this.props.hasMoreData) {\r\n                    this.props.loadMore(this.props.page + 1);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    render: function () {\r\n        return (\r\n            <div ref=\"scrollContainer\" className=\"scrollable\" onScroll={this.handleScroll}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n});\r\n","﻿// QueryStats is a bar just under the SearchHeader. It shows errors, if any, or the current query, returned count, and runtime.\r\nvar QueryStats = React.createClass({\r\n    onTableTileClick: function (name, e) {\r\n        this.props.onSelectedTableChange(name);\r\n    },\r\n    render: function () {\r\n        if (this.props.error) {\r\n            // If the query didn't return, show an error\r\n            return <div className=\"queryStats\"><span className=\"error-icon icon\" /><span className=\"error\">{this.props.error}</span></div>;\r\n        } else {\r\n            // If there's no query, keep this area empty\r\n            if (!this.props.allCountData || !this.props.allCountData.content) return null;\r\n            var allCountContent = this.props.allCountData.content;\r\n\r\n            // Write tiles with results per table\r\n            var tiles = [];\r\n            for (var i = 0; i < allCountContent.length; ++i) {\r\n                var tableResult = allCountContent[i];\r\n\r\n                var cssClasses = \"\";\r\n                var parts = [];\r\n\r\n                if (tableResult.tableName === this.props.currentTable) cssClasses += \" current\";\r\n\r\n                if (!tableResult.allowedToRead) {\r\n                    parts.push(<span className=\"lock-icon icon\" />);\r\n                } else if (!tableResult.succeeded) {\r\n                    parts.push(<span className=\"error-icon icon\" />);\r\n                } else {\r\n                    parts.push(<span className=\"countValue\">{tableResult.count.toLocaleString()}</span>);\r\n                }\r\n\r\n                tiles.push(\r\n                    <span key={\"tableTile_\" + tableResult.tableName} className={cssClasses + \" statsForTable clickable\"} onClick={this.onTableTileClick.bind(this, tableResult.tableName)}>\r\n                        {parts}\r\n                        <span>{tableResult.tableName}</span>\r\n                    </span>\r\n                );\r\n            }\r\n\r\n            // Write details for selected table\r\n            var selectedDetails = [];\r\n            if(this.props.selectedData && this.props.selectedData.content) {\r\n                var selectedContent = this.props.selectedData.content;\r\n\r\n                if(selectedContent.query.where) {\r\n                    selectedDetails.push(<span>for <span className=\"h\">{selectedContent.query.where}</span></span>);\r\n                }\r\n\r\n                if (selectedContent.details.errors) {\r\n                    selectedDetails.push(<span>&nbsp;<span className=\"error-icon icon\" /><b>{selectedContent.details.errors}</b></span>);\r\n                }\r\n\r\n                if (selectedContent.details.warnings) {\r\n                    selectedDetails.push(<span>&nbsp;<span className=\"icon-warning icon\" /><b>{selectedContent.details.warnings}</b></span>);\r\n                }\r\n\r\n                if (selectedContent.details.accessDeniedColumns) {\r\n                    var deniedColumnList = \"Denied Columns: \";\r\n                    for (var i = 0; i < selectedContent.details.accessDeniedColumns.length; ++i) {\r\n                        if (i > 0) deniedColumnList += \", \";\r\n                        deniedColumnList += selectedContent.details.accessDeniedColumns[i];\r\n                    }\r\n\r\n                    selectedDetails.push(<span>&nbsp;<span className=\"icon-lock icon\" title={deniedColumnList} /></span>);\r\n                }\r\n\r\n                if (this.props.rssUrl && selectedContent.details.succeeded) {\r\n                    selectedDetails.push(\r\n                        <a title=\"RSS Link\" target=\"_blank\" href={this.props.rssUrl}>\r\n                            <img className=\"rss\" src=\"icons/feed-icon-14x14.png\" style={{ position: \"relative\", top: \"1px\" }} alt=\"RSS\" />\r\n                        </a>\r\n                    );\r\n                }\r\n\r\n                if (this.props.csvUrl && selectedContent.details.succeeded) {\r\n                    selectedDetails.push(\r\n                        <a title=\"Download CSV\" target=\"_blank\" href={this.props.csvUrl}>\r\n                            <span className=\"icon-download\" />\r\n                        </a>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"queryStats\">\r\n                {tiles}\r\n                {selectedDetails}\r\n            </div>\r\n        );\r\n    }\r\n});","﻿// ResultDetails shows (default formatted) details for an item when it was clicked.\r\nvar ResultDetails = React.createClass({\r\n    handleClose: function () {\r\n        this.props.onClose();\r\n    },\r\n    render: function () {\r\n        if (!this.props.itemId) return null;\r\n        if (!this.props.data) return null;\r\n\r\n        return (\r\n            <div className=\"details\">\r\n                <div className=\"commands\">\r\n                    <span className=\"icon icon-cancel\" onClick={this.handleClose} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"detailHeader\">\r\n                        <div className=\"detailTitle\">\r\n                            {this.props.itemId}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"detailBody\">\r\n                        <div className=\"box\">\r\n                            <DetailsTable \r\n                                data={this.props.data} \r\n                                table={this.props.table}\r\n                                query={this.props.query}\r\n                                onAddClause={this.props.onAddClause\r\n                            } />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});","﻿// ResultListing shows a table of items matching a query, with sortable columns\r\nvar ResultListing = React.createClass({\r\n    getInitialState: function () {\r\n        return { selectedIndex: -1, addColumnsShowing: false };\r\n    },\r\n    handleResort: function (e) {\r\n        // If a column heading was clicked, re-sort the table\r\n        var columnNameClicked = e.target.getAttribute(\"data-name\");\r\n        var sortOrder = \"asc\";\r\n\r\n        // If this column is already the sort column, toggle ascending/descending\r\n        if (this.props.sortColumn === columnNameClicked) {\r\n            sortOrder = (this.props.sortOrder === \"asc\" ? \"desc\" : \"asc\");\r\n        }\r\n\r\n        // Store the sort column and order and raise the \"onResort\" event\r\n        this.props.onResort(columnNameClicked, sortOrder);\r\n\r\n        e.stopPropagation();\r\n    },\r\n    handleSelect: function (e) {\r\n        var rowElement = e;\r\n        this.setState({ selectedIndex: rowElement.props.itemIndex, addColumnsShowing: false });\r\n        this.props.onSelectionChanged(rowElement.props.itemId);\r\n    },\r\n    handleAdd: function (e) {\r\n        if (e.target === this.refs.addButton) {\r\n            this.setState({ addColumnsShowing: !this.state.addColumnsShowing });\r\n        }\r\n        e.stopPropagation();\r\n    },\r\n    onAddColumn: function (name) {\r\n        if (name) {\r\n            var columns = this.props.data.content.query.columns;\r\n            columns.push(name);\r\n\r\n            this.setState({ addColumnsShowing: false }, this.props.onSetColumns(columns));\r\n        } else {\r\n            this.setState({ addColumnsShowing: false });\r\n        }\r\n    },\r\n    handleRemoveColumn: function (e) {\r\n        var columnName = e.target.getAttribute(\"data-column\");\r\n        var newColumns = this.props.data.content.query.columns.filter(function (name) { return name !== columnName; });\r\n        this.props.onSetColumns(newColumns);\r\n\r\n        e.stopPropagation();\r\n    },\r\n    handlePivot: function (e) {\r\n        var element = e.target;\r\n\r\n        this.props.onPivot(element.getAttribute(\"data-table\"), element.getAttribute(\"data-query\"));\r\n        e.stopPropagation();\r\n    },\r\n    selectByRelativeIndex: function (i) {\r\n        // Figure out the current row count\r\n        var count = 0;\r\n        if (this.props.data.content) count = this.props.data.content.values.rows.length;\r\n\r\n        // See what index the caller wants selected\r\n        var newSelectedIndex = this.state.selectedIndex + i;\r\n\r\n        // If nothing was selected, let down open the first item\r\n        if (!this.props.selectedId) newSelectedIndex = -1 + i;\r\n\r\n        // If out-of-bounds, do nothing\r\n        if (newSelectedIndex < 0 || newSelectedIndex >= count) return;\r\n\r\n        // Otherwise, trigger a selection change\r\n        var idColumnIndex = this.props.data.content.query.columns.indexOf(this.props.idColumn);\r\n        var row = this.props.data.content.values.rows[newSelectedIndex];\r\n        this.setState({ selectedIndex: newSelectedIndex });\r\n        this.props.onSelectionChanged(stripHighlight(row[idColumnIndex]));\r\n    },\r\n    render: function () {\r\n        var content = this.props.data.content;\r\n        if (!content || !content.details.succeeded || !this.props.idColumn) return null;\r\n\r\n        var idColumn = this.props.idColumn;\r\n        var idColumnIndex = content.query.columns.indexOf(this.props.idColumn);\r\n\r\n        // Write a column heading row - click to sort, remove/add columns\r\n        var columnCells = [];\r\n        for (var i = 0; i < content.values.columns.length; ++i) {\r\n            var column = content.values.columns[i];\r\n\r\n            var commands = [];\r\n\r\n            // Non-ID column commands\r\n            if (column.name !== idColumn) {\r\n                // Remove button\r\n                commands.push(<div key={\"remove_\" + column.name} data-column={column.name} className=\"icon-cancel icon-column-heading\" title=\"Remove Column\" onClick={this.handleRemoveColumn} />);\r\n\r\n                // Add 'Pivot to Grid' URL\r\n                var gridUrl = \"Grid.html\" + buildUrlParameters({ q: content.query.where, t: content.query.tableName, R1: column.name + \">\" });\r\n                commands.push(<a href={gridUrl} className=\"icon-view-all-albums icon-column-heading\" title={\"Grid By \" + column.name } />);\r\n            }\r\n\r\n            // Last column\r\n            if (i == content.values.columns.length - 1) {\r\n                // Add column button\r\n                commands.push(\r\n                    <div ref={\"addButton\"} className=\"add-column-button icon-add icon-column-heading\" title=\"Add Column\" onClick={this.handleAdd}>\r\n                        <AddColumnList showing={this.state.addColumnsShowing}\r\n                                       onAddColumn={this.onAddColumn}\r\n                                       allColumns={this.props.allColumns}\r\n                                       currentColumns={content.query.columns} />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            columnCells.push(<td key={\"heading_\" + column.name} data-name={column.name} onClick={this.handleResort}><div className=\"commands\">{commands}</div>{column.name}</td>);\r\n        }\r\n\r\n        // Write a row for each item\r\n        var index = 0;\r\n        var selectFunction = this.handleSelect;\r\n        var selectedId = this.props.selectedId;\r\n        var listingItems = content.values.rows.map(function (row) {\r\n            var id = stripHighlight(row[idColumnIndex]);\r\n            return <ResultListingItem key={id} itemId={id} itemIndex={index++} data={row} onSelectionChanged={selectFunction} selected={selectedId === id } />;\r\n        });\r\n\r\n        return (\r\n            <table className=\"resultTable\" tabIndex=\"2\">\r\n                <thead>\r\n                    <tr>\r\n                        {columnCells}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listingItems}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n});\r\n\r\nvar ResultListingItem = React.createClass({\r\n    handleClick: function (e) {\r\n        this.props.onSelectionChanged(this);\r\n    },\r\n    render: function () {\r\n        var id = this.props.itemId;\r\n\r\n        // Write a cell for each property of each item with highlighting\r\n        var cells = [];\r\n        for (var i = 0; i < this.props.data.length; ++i) {\r\n            var item = this.props.data[i];\r\n            cells[i] = (\r\n                <td key={id + \"_\" + i} title={stripHighlight(item)} dangerouslySetInnerHTML={highlight(item)} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <tr onClick={this.handleClick} className={(this.props.selected ? \"selected theme-background-light\" : \"theme-hover-light\")}>\r\n                {cells}\r\n            </tr>\r\n        );\r\n    }\r\n});\r\n","﻿// SearchHeader contains the top bar - branching, the search box, and top-level buttons\r\nvar SearchHeader = React.createClass({\r\n    componentDidMount: function() {\r\n        ReactDOM.findDOMNode(this.refs.searchBox).focus();\r\n    },\r\n    render: function () {\r\n        var placeholderText = \"Search for \";\r\n        if (this.props.tables) {\r\n            for (var i = 0; i < this.props.tables.length; ++i) {\r\n                if (i > 0) placeholderText += \", \";\r\n                placeholderText += this.props.tables[i];\r\n            }\r\n        }\r\n        placeholderText += \"...\";\r\n\r\n        return (\r\n            <div className=\"header theme-background-medium\">\r\n                <div className=\"title font-light theme-background-vdark\">\r\n                    <a href=\"/\">{this.props.name}</a>\r\n                </div>\r\n\r\n                <div className=\"searchBar\">\r\n                    <input id=\"searchBox\" ref=\"searchBox\" type=\"text\" placeholder={placeholderText} tabIndex=\"1\" onInput={this.props.onSearchChange} value={this.props.query} />\r\n                    <div className=\"searchIcon\">\r\n                        <i className=\"icon-find\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"buttons\">\r\n                    <a className=\"theme-background-dark\" href={\"mailto:?subject=\" + encodeURIComponent(this.props.name) + \": \" + encodeURIComponent(this.props.query) + \"&body=\" + encodeURIComponent(window.location.href)}>\r\n                        <i className=\"icon-mail\" title=\"Mail\"></i>\r\n                    </a>\r\n                    <a className=\"theme-background-dark\" href={\"mailto:\" + encodeURIComponent(this.props.feedbackEmailAddresses) + \"?subject=\" + encodeURIComponent(this.props.name) + \" Feedback\"}>\r\n                        <i className=\"icon-emoji2\" title=\"Feedback\"></i>\r\n                    </a>\r\n                    <a className=\"theme-background-dark\" href=\"/?help=true\">\r\n                        <i className=\"icon-help\" title=\"Help\"></i>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});","﻿// Inspired by https://github.com/tomkp/react-split-pane [MIT License]\r\nvar SplitPane = React.createClass({\r\n    defaultProps: { isFirstVisible: true, isSecondVisible: true },\r\n    onMouseUp: function () {\r\n        document.removeEventListener('mouseup', this.onMouseUp);\r\n        document.removeEventListener('mousemove', this.onMouseMove);\r\n    },\r\n    onMouseDown: function(e) {\r\n        document.addEventListener('mouseup', this.onMouseUp);\r\n        document.addEventListener('mousemove', this.onMouseMove);\r\n\r\n        this.setState({ totalWidth: this.refs.container.getBoundingClientRect().width })\r\n    },\r\n    onMouseMove: function(e) {\r\n        var node = ReactDOM.findDOMNode(this.refs.first);\r\n        var newWidth = e.clientX - node.offsetLeft;\r\n\r\n        if (this.props.minSize) {\r\n            if (newWidth < this.props.minSize) newWidth = this.props.minSize;\r\n            if (newWidth > this.state.totalWidth - this.props.minSize) newWidth = this.state.totalWidth - this.props.minSize;\r\n        }\r\n\r\n        node.style.width = newWidth + 'px';\r\n        node.style.flex = 'none';\r\n    },\r\n    render: function () {\r\n        if (!this.props.isFirstVisible) return this.props.children[1];\r\n        if (!this.props.isSecondVisible) return this.props.children[0];\r\n\r\n        return (\r\n            <div ref=\"container\" className=\"splitpane\">\r\n                <div ref=\"first\" className=\"pane\">\r\n                    {this.props.children[0]}\r\n                </div>\r\n                <div ref=\"handle\"\r\n                     className=\"resizer vertical\"\r\n                     onMouseDown={this.onMouseDown} />\r\n                <div ref=\"second\" className=\"pane\">\r\n                    {this.props.children[1]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});","﻿var SyntaxHelp = React.createClass({\r\n    getInitialState: function () {\r\n        return { showHelp: (this.props.showHelp) };\r\n    },\r\n    toggle: function () {\r\n        this.setState({ showHelp: !this.state.showHelp });\r\n    },\r\n    render: function () {\r\n        if (!this.state.showHelp) {\r\n            return (\r\n                <div className=\"splash\">\r\n                    <div style={{ width: \"100%\" } }>\r\n                        {this.props.splashContent}\r\n                        <div className=\"buttons\">\r\n                            <a className=\"theme-background-dark\" href=\"/?help=true\">\r\n                                <i className=\"icon-help\" title=\"Help\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"helpContent\">\r\n                <div className=\"helpIntro\">\r\n                    {this.props.splashContent}\r\n                </div>\r\n                <div className=\"features\">\r\n                    <h2>Features</h2>\r\n                    <div> - Click items to see details.</div>\r\n                    <div> - Click column headings to sort.</div>\r\n                    <div> - Click <span className=\"icon-add\" /> to add columns to listing, <span className=\"icon-cancel\" /> to remove them.</div>\r\n                    <div> - Click <span className=\"icon-download\" /> to download listing (same columns, query, and order) as CSV.</div>\r\n                    <div> - Click <img src=\"icons/feed-icon-14x14.png\" alt=\"RSS\" /> for URL to subscribe to query.</div>\r\n                </div>\r\n                <div className=\"syntaxIntro\">\r\n                    <h2>Syntax</h2>\r\n                    <table className=\"syntaxTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: \"25%\" }}>Rule</th>\r\n                                <th style={{ width: \"25%\" }}>Example</th>\r\n                                <th style={{ width: \"50%\" }}>Meaning</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Type anything to search across all columns.</td>\r\n                                <td className=\"font-example\">halo Pris</td>\r\n                                <td>Find items with words starting with &quot;halo&quot; and &quot;Pris&quot; anywhere, case insensitive.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use &lt;column&gt; &lt;operator&gt; &lt;value&gt; to search one column.</td>\r\n                                <td className=\"font-example\">Team=Central AccessLevel &gt; 3</td>\r\n                                <td>Team equals &quot;Central&quot; (case sensitive) and AccessLevel is over 3.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use &apos;AND&apos;, &apos;OR&apos;, &apos;NOT&apos;, and parens for subexpressions.</td>\r\n                                <td className=\"font-example\">NOT Team=Central AND (AccessLevel &gt; 3 OR Role=Administrator)</td>\r\n                                <td>Team is not Central and (AccessLevel is over 3 or Role is Administrator.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use any operators from Web, SQL, or C# syntax.</td>\r\n                                <td>\r\n                                    <table className=\"syntaxTable\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>&amp;&amp;</td>\r\n                                                <td>&amp;</td>\r\n                                                <td>AND</td>\r\n                                                <td>aNd</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>||</td>\r\n                                                <td>|</td>\r\n                                                <td>OR</td>\r\n                                                <td>Or</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>!</td>\r\n                                                <td>-</td>\r\n                                                <td>NOT</td>\r\n                                                <td>noT</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>=</td>\r\n                                                <td>==</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>&lt;&gt;</td>\r\n                                                <td>!=</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>|&gt;</td>\r\n                                                <td>STARTSWITH</td>\r\n                                                <td>UNDER</td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>:</td>\r\n                                                <td>MATCH</td>\r\n                                                <td>FREETEXT</td>\r\n                                                <td>CONTAINS</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>::</td>\r\n                                                <td>MATCHEXACT</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use &apos;:&apos; for &quot;has a word starting with&quot; or &quot;::&quot; for &quot;has the exact word&quot;</td>\r\n                                <td className=\"font-example\">Team:Centr && Name::Will</td>\r\n                                <td>Team contains words starting with &quot;Centr&quot; and Name has the full word &quot;Will&quot; (&quot;William&quot; would not match) (case insensitive).</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use &apos;|&gt;&apos; for starts with.</td>\r\n                                <td className=\"font-example\">Team |&gt; Centr</td>\r\n                                <td>Team starts with &quot;Centr&quot; (&quot;Grand Central&quot; would not match) (case sensitive).</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use &quot;&quot; to look for empty values.</td>\r\n                                <td className=\"font-example\">Team=&quot;&quot;</td>\r\n                                <td>Team is empty.</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use &quot;today-n&quot; (no spaces) for relative dates.</td>\r\n                                <td className=\"font-example\">HireDate &lt; today-60</td>\r\n                                <td>HireDate is more than 60 days ago [UTC].</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Use any .NET DateTime.Parse-able formats.</td>\r\n                                <td className=\"font-example\">HireDate &gt; &quot;2016-10-01 10:00AM&quot;</td>\r\n                                <td>HireDate is after Oct 1, 2016 10:00 AM [UTC].</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Wrap column names with braces and values with quotes if they contain spaces. Escape braces and quotes by doubling them.</td>\r\n                                <td className=\"font-example\">[Owner [Ops]]]=&quot;Bilbo &quot;&quot;Ringbearer&quot;&quot; Baggins&quot;</td>\r\n                                <td>The &#123;Owner [Ops]&#125; column equals &#123;Bilbo &quot;Ringbearer&quot; Baggins&#125;.</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"syntaxExamples\">\r\n                    <h2>Examples</h2>\r\n                    <div className=\"exampleBox\">\r\n                        <div className=\"font-example\">Team=&quot;Central&quot; AND IP:10.194</div>\r\n                        <div>Find items where Team equals &quot;Central&quot;, the IP address starts with &quot;10.194&quot;.</div>\r\n                        <div className=\"indent\">\r\n                            The word index operators (&apos;:&apos;, &apos;::&apos;) are not case sensitive, but all other operators (&apos;=&apos;, &apos;!=&apos;, &apos;|&gt;&apos;) are case sensitive.<br />\r\n                            The word index operators only match from word boundaries, so &quot;Team:ent&quot; will not match a Team of &quot;Central&quot;.<br />\r\n                            Text is split into alphanumeric words and dotted phrases. (&quot;10.194.155.11&quot; splits to &quot;10&quot;, &quot;194&quot;, &quot;155&quot;, &quot;11&quot;, &quot;10.194.155.11&quot;)<br />\r\n                            Therefore, &quot;IP:10.194&quot; will match &quot;10.194.155.11&quot; but not &quot;11.10.194.155&quot;.<br />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"exampleBox\">\r\n                        <div className=\"font-example\">[Team]=&quot;Central&quot; && (HireDate &lt; today-60 || IsManager == 1)</div>\r\n                        <div>Find items with Team &quot;Central&quot; which were hired in the last 60 days or are managers.</div>\r\n                        <div className=\"indent\">\r\n                            &quot;Today&quot; is midnight UTC, so &quot;today-1&quot; will match 11:59p the day before yesterday (UTC).<br />\r\n                            DateTimes in queries are interpreted at UTC.<br />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});","﻿// zDefaultConfiguration.jsx contains default configuration settings for this site instance.\r\n// Add a copy in configuration\\configuration.jsx to override these settings.\r\n\r\nif (!configuration) {\r\n    var configuration = {\r\n        // Arriba Service URL to query\r\n        // Hardcode to the name of your service. Use port 42784 for HTTP, 42785 for HTTPS.\r\n        url: \"http://\" + window.location.hostname + \":42784\",\r\n\r\n        // Name of tool to show [top right and elsewhere]\r\n        toolName: \"Arriba\",\r\n\r\n        // Theme to use [see theme.css for options and to define others]\r\n        theme: \"theme-teal\",\r\n\r\n        // E-Mail addresses to whom feedback should go\r\n        feedbackEmailAddresses: \"\",\r\n\r\n        // Listing: Default Columns and Sort Order to show per table\r\n        listingDefaults: {\r\n            /* \"<TableName\">: { columns: [\"<Col1>\", \"Col2\", \"...\"], sortColumn: \"<SortColumnName>\", sortOrder: \"asc\" } */\r\n        },\r\n\r\n        // Listing: Default details rendering per table\r\n        customDetailsProviders: {\r\n            /* \"<TableName>\": <ReactClassNameUnquoted> */\r\n        },\r\n\r\n        // Grid: Pre-defined Grid queries\r\n        gridDefaultQueries: {\r\n            \"Clear\": {},\r\n            /*\"<PredefinedQueryName>\": {\r\n                query: \"<OverallBaseQuery>\",\r\n                currentTable: \"<TableToQuery>\",\r\n                rows: [\"<FirstRowQuery>\", \"<SecondRowQuery>\", \"...\"],\r\n                rowLabels: [\"<FirstRowLabel>\", \"<SecondRowLabel>\", \"...\"],\r\n                cols: [\"<FirstColumnQuery>\", \"<SecondColumnQuery>\", \"...\"],\r\n                colLabels: [\"<FirstColumnLabel>\", \"<SecondColumnLabel>\", \"...\"],\r\n                showPortionOf: \"col\" // [col|row|*total*], what the background bars should be showing percentages of.\r\n                showPortionAs: \"bar\" // [*bar*|pie], which visualization to show in each grid cell.\r\n                show: \"both\" // [number|percentage|*both*], what value(s) to show in each grid cell.\r\n            },*/\r\n        },\r\n\r\n        // Content to show before a query is typed\r\n        splashContent: (\r\n            <div>\r\n                Arriba is a data exploration, free text search, and structured search engine.\r\n            </div>\r\n        ),\r\n\r\n        // Content to show if query fails due to access denied (401)\r\n        accessDeniedContent: (\r\n            <span>\r\n                Access to Arriba Search denied.\r\n            </span>\r\n        ),\r\n\r\n        // Content to show if query fails because service is unavailable (404, 500)\r\n        serviceUnavailableContent: (\r\n            <span>\r\n                Arriba Search is currently unavailable.\r\n            </span>\r\n        )\r\n    };\r\n}\r\n","﻿// NOTE: Depends on configuration from zConfiguration.jsx.\r\n\r\n// The GridFunctionCell is the corner cell which shows the aggregation function and column [COUNT(*)].\r\nvar GridFunctionCell = React.createClass({\r\n    getInitialState: function () {\r\n        return {\r\n            isEditing: false,\r\n            aggregationFunction: this.props.aggregationFunction,\r\n            aggregateColumn: this.props.aggregateColumn\r\n        }\r\n    },\r\n    handleEdit: function() {\r\n        this.setState({ isEditing: true });\r\n    },\r\n    handleChange: function() {\r\n        this.setState({ aggregationFunction: this.refs.aggregationFunction.value, aggregateColumn: this.refs.aggregateColumn.value });\r\n    },\r\n    handleCancel: function() {\r\n        this.setState(this.getInitialState());\r\n    },\r\n    handleAccept: function () {\r\n        this.setState({ isEditing: false });\r\n        this.props.onChange(this.refs.aggregationFunction.value, this.refs.aggregateColumn.value);\r\n    },\r\n    isNumericColumn: function (t) {\r\n        t = t.toLowerCase();\r\n        return t.indexOf(\"int\") === 0 || t.indexOf(\"uint\") === 0 || t === \"short\" || t === \"byte\" || t === \"float\" || t === \"double\";\r\n    },\r\n    render: function () {\r\n        if (this.state.isEditing) { \r\n            var columns = [];\r\n\r\n            if (this.state.aggregationFunction === \"COUNT\") {\r\n                columns.push(<option key=\"C*\" value=\"\"></option>);\r\n            } else {\r\n                for (var i = 0; i < this.props.allColumns.length; ++i) {\r\n                    if (!this.isNumericColumn(this.props.allColumns[i].type)) continue;\r\n                    var columnName = this.props.allColumns[i].name;\r\n                    columns.push(<option key={columnName} value={columnName }>{columnName}</option>);\r\n                }\r\n            }\r\n\r\n            return (\r\n                <td className=\"grid-heading\">\r\n                    <span className=\"icon-cancel icon-column-heading clickable\" title=\"Cancel\" onClick={this.handleCancel} />\r\n                    <span className=\"icon-accept icon-column-heading clickable\" title=\"Done\" onClick={this.handleAccept} />\r\n                    <div className=\"cell\">\r\n                        <select ref=\"aggregationFunction\" value={this.state.aggregationFunction} onChange={this.handleChange}>\r\n                            <option>COUNT</option>\r\n                            <option>SUM</option>\r\n                            <option>MIN</option>\r\n                            <option>MAX</option>\r\n                        </select>\r\n                        &nbsp;of&nbsp;\r\n                        <select ref=\"aggregateColumn\" value={this.state.aggregateColumn} onChange={this.handleChange}>\r\n                            {columns}\r\n                        </select>\r\n                    </div>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        return <td className=\"grid-heading\" onClick={this.handleEdit}><div>{this.props.aggregationFunction + \"(\" + this.props.aggregateColumn + \")\"}</div></td>;\r\n    }\r\n});\r\n\r\n// GridHeadingCell renders the cells used in the first row and column\r\nvar GridHeadingCell = React.createClass({\r\n    getInitialState: function () {\r\n        return {\r\n            isEditing: false,\r\n            label: this.props.label,\r\n            query: this.props.value\r\n        }\r\n    },\r\n    componentDidMount: function() {\r\n        if(this.props.value === \"All\") document.body.addEventListener(\"keydown\", this.handleKeyDown);\r\n    },\r\n    handleKeyDown: function (e) {\r\n        if (e.altKey) {\r\n            // Alt+Right Arrow -> new column\r\n            if (e.keyCode == 39 && this.props.type === \"column\") {\r\n                this.handleEdit();\r\n            }\r\n\r\n            // Alt+Down Arrow -> new row\r\n            if (e.keyCode == 40 && this.props.type === \"row\") {\r\n                this.handleEdit();\r\n            }\r\n        }\r\n    },\r\n    handleRemove: function(e) {\r\n        this.props.onChange(this.props.type, this.props.index, \"\", \"\");\r\n        e.stopPropagation();\r\n    },\r\n    handleEdit: function (e) {\r\n        var editQuery = (this.props.value === \"All\" ? \"\" : this.props.value);\r\n        this.setState({ isEditing: true, query: editQuery });\r\n        e.stopPropagation();\r\n    },\r\n    handleQueryChange: function(e) {\r\n        this.setState({ query: e.target.value });\r\n    },\r\n    handleLabelChange: function (e) {\r\n        this.setState({ label: e.target.value });\r\n    },\r\n    handleCancel: function(e) {\r\n        this.setState({ isEditing: false, query: this.props.value, label: this.props.label });\r\n    },\r\n    handleAccept: function(e) {\r\n        this.props.onChange(this.props.type, this.props.index, this.refs.query.value, this.refs.label.value);\r\n        this.setState({ isEditing: false });\r\n    },\r\n    handleKey: function (e) {\r\n        // ESC: Cancel change\r\n        if (e.keyCode === 27) {\r\n            this.setState({ isEditing: false, query: this.props.value, label: this.props.label });\r\n        }\r\n\r\n        // Enter: Change query\r\n        if (e.keyCode === 13) {\r\n            this.props.onChange(this.props.type, this.props.index, this.refs.query.value, this.refs.label.value);\r\n            this.setState({ isEditing: false });\r\n            return false;\r\n        }\r\n    },\r\n    render: function () {\r\n        if (this.state.isEditing) {\r\n            return (\r\n                <td className=\"grid-heading editing\">\r\n                    <span className=\"icon-cancel icon-column-heading clickable\" title=\"Cancel\" onClick={this.handleCancel} />\r\n                    <span className=\"icon-accept icon-column-heading clickable\" title=\"Done\" onClick={this.handleAccept} />\r\n                    <div>\r\n                        <span className=\"icon-find\" />\r\n                        <input \r\n                                ref=\"query\" \r\n                                autoFocus \r\n                                tabIndex=\"2\"\r\n                                type=\"text\" \r\n                                placeholder=\"Query\"\r\n                                value={this.state.query} \r\n                                onChange={this.handleQueryChange} \r\n                                onKeyDown={this.handleKey} />\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"icon-rename\" />\r\n                        <input \r\n                                ref=\"label\" \r\n                                tabIndex=\"3\"\r\n                                type=\"text\" \r\n                                placeholder=\"Label\"\r\n                                value={this.state.label} \r\n                                onChange={this.handleLabelChange} \r\n                                onKeyDown={this.handleKey} />                        \r\n                    </div>\r\n\r\n                </td>\r\n            );\r\n        }\r\n\r\n        var label = (this.state.label || this.state.query);\r\n\r\n        var rowOrColumn = (this.props.type === \"row\" ? \"Row\" : \"Column\");\r\n        var control;\r\n        if (this.props.value !== \"All\") {\r\n            control = <span key={\"removeButton\"} className=\"icon-cancel icon-column-heading\" title={\"Remove \" + rowOrColumn} onClick={this.handleRemove} />;\r\n        } else {\r\n            control = <span ref={\"addButton\"} className=\"add-column-button icon-add icon-column-heading\" title={\"Add \" + rowOrColumn} onClick={this.handleEdit} />;\r\n        }\r\n\r\n        return <td onClick={this.handleEdit} title={this.state.query} className=\"grid-heading\">{control}<div>{label}</div></td>;\r\n    }\r\n});\r\n\r\n// GridValueCell renders the cells in the grid, showing their value formatted according to settings.\r\nvar GridValueCell = React.createClass({\r\n    renderPie: function (percentage, emptyColor, filledColor) {\r\n        if(!emptyColor) emptyColor= \"rgba(181, 231, 247, 0.5)\";\r\n        if(!filledColor) filledColor = \"rgb(61, 195, 246)\";\r\n\r\n        // For technique, see: https://www.smashingmagazine.com/2015/07/designing-simple-pie-charts-with-css/\r\n        return (\r\n            <svg className=\"pie\" viewBox=\"0 0 32 32\" style={{ transform: \"rotate(-90deg)\", background: emptyColor, borderRadius: \"50%\" }}>\r\n                <circle r=\"16\" cx=\"16\" cy=\"16\" style={{ fill: emptyColor, stroke: filledColor, strokeWidth: \"32\", strokeDasharray: (100 * percentage).toFixed(0) + \" 100\" }}></circle>\r\n            </svg>\r\n        );\r\n    },\r\n    render: function () {\r\n        var nullCell = <td key={\"R\" + this.props.rowIndex + \"C\" + this.props.colIndex }><div className=\"cell\">-</div></td>;\r\n        if (!this.props.content.values) return nullCell;\r\n\r\n        var colors = [\"rgba(88, 207, 119, 0.5)\", \"rgba(96, 117, 194, 0.5)\", \"rgba(81, 164, 183, 0.5)\", \"rgba(255, 181, 108, 0.5)\", \"rgba(255, 125, 108, 0.5)\", \"rgba(170, 84, 191, 0.5)\"];\r\n        var darkColors = [\"rgb(13, 186, 58)\", \"rgb(17, 42, 134)\", \"rgb(15, 127, 154)\", \"rgb(248, 132, 17)\", \"rgb(245, 44, 17)\", \"rgb(135, 16, 164)\"]\r\n\r\n        var dataBlockRowIndex = this.props.rowIndex * this.props.columnCount + this.props.colIndex;\r\n        var dataBlockValueColumnIndex = this.props.content.values.columnCount - 1;\r\n        \r\n        // Bail out if we don't find the expected cell values\r\n        if (this.props.content.values.rows.length <= dataBlockRowIndex || this.props.content.values.rows[dataBlockRowIndex].length <= dataBlockValueColumnIndex) {\r\n            return nullCell;\r\n        }\r\n\r\n        // Get the numeric value\r\n        var value = this.props.content.values.rows[dataBlockRowIndex][dataBlockValueColumnIndex] || 0;\r\n\r\n        // Determine the denominator to compare against\r\n        var denominatorRowIndex;\r\n        if (this.props.showPortionOf === \"row\") {\r\n            denominatorRowIndex = ((this.props.rowIndex + 1) * this.props.columnCount) - 1;\r\n        } else if (this.props.showPortionOf === \"col\") {\r\n            denominatorRowIndex = ((this.props.rowCount - 1) * this.props.columnCount) + this.props.colIndex;\r\n        } else {\r\n            denominatorRowIndex = this.props.content.values.rows.length - 1;\r\n        }\r\n\r\n        var denominator = this.props.content.values.rows[denominatorRowIndex][dataBlockValueColumnIndex] || 0;\r\n        var percentage = value / denominator;\r\n        if (denominator === 0) percentage = 0;\r\n\r\n        // Write the value in the requested form - number with commas or percentage with three significant digits.\r\n        var valueFormatted = (percentage * 100).toFixed(1) + \"%\";\r\n        if (valueFormatted === \"100.0%\") valueFormatted = \"100%\";\r\n\r\n        if (this.props.show === \"number\") {\r\n            valueFormatted = value.toLocaleString();\r\n        } else if (this.props.show === \"both\") {\r\n            valueFormatted = <span><span>{valueFormatted}</span><span style={{ float: \"right\" }}>{value.toLocaleString()}</span></span>;\r\n        }\r\n\r\n        // Compute the Query URL for this cell\r\n        var cellQuery = this.props.content.query.where;\r\n\r\n        for (var columnIndex = 0; columnIndex < dataBlockValueColumnIndex; ++columnIndex) {\r\n            var filter = this.props.content.values.rows[dataBlockRowIndex][columnIndex];\r\n            if (filter) {\r\n                if (cellQuery) cellQuery += \" AND \";\r\n                cellQuery += filter;\r\n            }\r\n        }\r\n\r\n        if (this.props.content.query.aggregator === \"MIN\" || this.props.content.query.aggregator === \"MAX\") {\r\n            if (cellQuery) cellQuery += \" AND \";\r\n            cellQuery += this.props.content.query.aggregationColumns[0] + \" = \" + value.toString();\r\n        }\r\n\r\n        var cellUrl = buildUrlParameters({ t: this.props.content.query.tableName, q: cellQuery })\r\n\r\n        // Choose a color for the relative value rendering\r\n        var colorIndex = 0;\r\n        if (this.props.showPortionOf === \"row\") {\r\n            colorIndex = this.props.rowIndex % colors.length;\r\n        } else if (this.props.showPortionOf === \"col\") {\r\n            colorIndex = this.props.colIndex % colors.length;\r\n        }\r\n\r\n        // Write the element or style needed to show the relative value\r\n        var portionElement = null;\r\n        if (this.props.showPortionAs === \"pie\") {\r\n            portionElement = this.renderPie(percentage, colors[colorIndex], darkColors[colorIndex]);\r\n        }\r\n\r\n        var portionStyle = null;\r\n        if (this.props.showPortionAs === \"bar\") {\r\n            // Target Width: 150px + (2 x 8x padding) = 166px.\r\n            portionStyle = { boxShadow: colors[colorIndex] + \" \" + 166 * percentage + \"px 0px 0px inset\" };\r\n            \r\n            // Fills 100% of the cell width, but doesn't animate [in Chrome, 12/2016]. The animation is a higher priority until we can find a way to get both.\r\n            //portionStyle = { background: \"linear-gradient(to right, \" + colors[colorIndex] + \" 0, \" + colors[colorIndex] + \" \" + (100 * percentage).toFixed(0) + \"%, rgba(0, 0, 0, 0) \" + (100 * percentage).toFixed(0) + \"%)\" };\r\n        }\r\n\r\n        return (\r\n            <td key={\"R\" + this.props.rowIndex + \"C\" + this.props.colIndex} className=\"c\">\r\n                <div style={portionStyle}>\r\n                    {portionElement}\r\n                    <a href={\"/\" + cellUrl}>{valueFormatted}</a>\r\n                </div>\r\n            </td>\r\n        );\r\n    }\r\n});\r\n\r\n// GridMain wraps the overall grid UI\r\nvar GridMain = React.createClass({\r\n    getInitialState: function () {\r\n        return {\r\n            blockingErrorTitle: null,\r\n            blockingErrorContent: null,\r\n\r\n            query: this.props.params.q || \"\",\r\n            pivotQueries: [],\r\n            currentTable: this.props.params.t,\r\n            currentTableAllColumns: [],\r\n\r\n            aggregationFunction: this.props.params.af || \"COUNT\",\r\n            aggregateColumn: this.props.params.ac || \"\",\r\n            rows: getParameterArrayForPrefix(this.props.params, \"r\"),\r\n            rowLabels: getParameterArrayForPrefix(this.props.params, \"rl\"),\r\n            cols: getParameterArrayForPrefix(this.props.params, \"c\"),\r\n            colLabels: getParameterArrayForPrefix(this.props.params, \"cl\"),\r\n\r\n            show: this.props.params.show || \"both\",\r\n            showPortionOf: this.props.params.of || \"total\",\r\n            showPortionAs: this.props.params.as || \"bar\",\r\n\r\n            gridData: null\r\n        };\r\n    },\r\n    getClearedUserSelections: function () {\r\n        return {\r\n            /* Query is kept to allow \"re-exploring\" the query. All other state is cleared. */\r\n\r\n            aggregationFunction: \"COUNT\",\r\n            aggregateColumn: \"\",\r\n            rows: [],\r\n            rowLabels: [],\r\n            cols: [],\r\n            colLabels: [],\r\n\r\n            show: \"both\",\r\n            showPortionOf: \"total\",\r\n            showPortionAs: \"bar\",\r\n\r\n            userSelectedTable: \"\",\r\n\r\n            gridData: null\r\n        };\r\n    },\r\n    componentDidMount: function () {\r\n        if (this.props.params.p) {\r\n            this.selectDefaultQuery(this.props.params.p);\r\n        } else {\r\n            this.runSearch();\r\n        }\r\n    },\r\n    handleSelectDefaultQuery: function (e) {\r\n        var name = e.target.value;\r\n        this.selectDefaultQuery(name);\r\n    },\r\n    selectDefaultQuery: function(name) {\r\n        var query = this.props.gridDefaultQueries[name];\r\n        if (query) {\r\n            this.setState(this.getClearedUserSelections());\r\n            this.setState(query, this.runSearch);\r\n        }\r\n    },\r\n    handleChangeAggregation: function(aggregationFunction, aggregateColumn) {\r\n        this.setState({ aggregationFunction: aggregationFunction, aggregateColumn: aggregateColumn, userSelectedTable: this.state.currentTable }, this.runSearch);\r\n    },\r\n    handleChangeShow: function(e) {\r\n        this.setState({ show: e.target.value }, this.setHistory);\r\n    },\r\n    handleChangeShowPortionOf: function (e) {\r\n        this.setState({ showPortionOf: e.target.value }, this.setHistory);\r\n    },\r\n    handleChangeShowPortionAs: function (e) {\r\n        this.setState({ showPortionAs: e.target.value }, this.setHistory);\r\n    },\r\n    handleQueryChange: function (type, index, value, label) {\r\n        var newState = { userSelectedTable: this.state.currentTable, gridData: null, addColumn: false, addRow: false };\r\n\r\n        // NOTE: When a column or row is changed, we lock the current table and clear the grid data.\r\n        //  We lock the table because the rows/cols are cleared when the active table is changed and we don't want \"top query\" changes to lose the cols/rows you've picked\r\n        //  We clear Grid data because after the change but before the query, the data is inconsistent with the cols/rows and we don't want React to draw it like that\r\n        if (type === \"column\") {\r\n            var columns = this.state.cols.slice();\r\n            var colLabels = this.state.colLabels.slice();\r\n\r\n            if (value) {\r\n                columns[index] = value;\r\n                colLabels[index] = label;\r\n            } else {\r\n                columns.splice(index, 1);\r\n                colLabels.splice(index, 1);\r\n            }\r\n\r\n            newState.cols = columns;\r\n            newState.colLabels = colLabels;\r\n        } else if (type === \"row\") {\r\n            var rows = this.state.rows.slice();\r\n            var rowLabels = this.state.rowLabels.slice();\r\n\r\n            if (value) {\r\n                rows[index] = value;\r\n                rowLabels[index] = label;\r\n            } else {\r\n                rows.splice(index, 1);\r\n                rowLabels.splice(index, 1);\r\n            }\r\n\r\n            newState.rows = rows;\r\n            newState.rowLabels = rowLabels;\r\n        }\r\n\r\n        this.setState(newState, this.runSearch);\r\n    },\r\n    onSelectedTableChange: function (name) {\r\n        if (this.state.currentTable === name) {\r\n            // If the selected table is clicked, just mark it actively selected and fix the URL\r\n            this.setState({ userSelectedTable: name }, this.setHistory);\r\n        } else {\r\n            // Otherwise, clear the columns/sort/sortOrder and query the new selected table\r\n            var cleared = this.getClearedUserSelections();\r\n            cleared.userSelectedTable = name;\r\n            cleared.currentTable = name;\r\n            this.setState(cleared, this.runSearch);\r\n        }\r\n\r\n    },\r\n    onSearchChange: function (e) {\r\n        this.setState({ query: e.target.value }, this.delayedRunSearch);\r\n    },\r\n    delayedRunSearch: function () {\r\n        // Only query every 250 milliseconds while typing\r\n        if (!this.timer) {\r\n            this.timer = window.setTimeout(this.runSearch, 250);\r\n        }\r\n    },\r\n    runSearch: function () {\r\n        this.timer = null;\r\n        this.getAllCounts();\r\n        this.setHistory();\r\n    },\r\n    getAllCounts: function () {\r\n        // On query, ask for the count from every table.\r\n        var params = { q: this.state.query };\r\n        this.addPivotClauses(params);\r\n\r\n        // Get the count of matches from each accessible table\r\n        jsonQuery(\r\n            this.props.url + \"/allCount\",\r\n            function (data) {\r\n                var tableToShow = this.state.userSelectedTable;\r\n                if (!tableToShow) tableToShow = data.content[0].tableName;\r\n\r\n                this.setState({ allCountData: data, currentTable: tableToShow, error: null }, this.getTableBasics.bind(this, this.getGrid));\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                this.setState({ allCountData: [], error: \"Error: Server didn't respond to [\" + xhr.url + \"]. \" + err });\r\n\r\n                if (status === 500 || status === 404) {\r\n                    this.setState({ blockingErrorTitle: \"Service Unavailable\", blockingErrorContent: this.props.serviceUnavailableContent });\r\n                } else {\r\n                    this.setState({ blockingErrorTitle: \"Access Denied\", blockingErrorContent: this.props.accessDeniedContent });\r\n                }\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this),\r\n            params\r\n        );\r\n    },\r\n    getTableBasics: function (next) {\r\n        // Once a table is selected, find out the columns\r\n        jsonQuery(this.props.url + \"/table/\" + this.state.currentTable,\r\n            function (data) {\r\n                this.setState(\r\n                    {\r\n                        currentTableAllColumns: data.content.columns,\r\n                        error: null\r\n                    }, next);\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                this.setState({ gridData: [], error: \"Error: Server didn't respond to [\" + xhr.url + \"]. \" + err });\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this)\r\n        );\r\n    },\r\n    getGrid: function() {\r\n        // Once the counts query runs and table basics are loaded, get a page of results\r\n\r\n        // Get a page of matches for the given query for the desired columns and sort order, with highlighting.\r\n        jsonQuery(\r\n            this.buildQueryUrl(),\r\n            function (data) {\r\n                var state = { gridData: data, error: null };\r\n\r\n                // If the rows or columns were expanded by the query, use the expanded values so subsequent editing works\r\n                // NOTE: Track the dimension for rows and columns; if only columns were passed, dimensions[0] is the column.\r\n                if (data.content && data.content.query && data.content.query.dimensions) {\r\n                    var dimensions = data.content.query.dimensions;\r\n                    var dimensionIndex = 0;\r\n\r\n                    if (this.state.rows && this.state.rows.length === 1) {\r\n                        var lastRow = this.state.rows[0];\r\n                        if (lastRow.indexOf(\">\") === lastRow.length - 1) {\r\n                            state.rows = (dimensions[dimensionIndex] ? dimensions[dimensionIndex].groupByWhere : []);\r\n                            state.rowLabels = [];\r\n                        }\r\n\r\n                        dimensionIndex++;\r\n                    }\r\n\r\n                    if (this.state.cols && this.state.cols.length === 1) {\r\n                        var lastColumn = this.state.cols[0];\r\n                        if (lastColumn.indexOf(\">\") === lastColumn.length - 1) {\r\n                            state.cols = (dimensions[dimensionIndex] ? dimensions[dimensionIndex].groupByWhere : []);\r\n                            state.colLabels = [];\r\n                        }\r\n\r\n                        dimensionIndex++;\r\n                    }\r\n                }\r\n\r\n                this.setState(state);\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                this.setState({ gridData: [], error: \"Error: Server didn't respond to [\" + xhr.url + \"]. \" + err });\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this)\r\n        );\r\n    },\r\n    setHistory: function () {\r\n        var url = this.buildThisUrl(true);\r\n        if (url !== window.location.href) {\r\n            history.pushState(\"\", \"\", url);\r\n        }\r\n    },\r\n    buildQueryUrl: function () {\r\n        var parameters = {\r\n            action: \"aggregate\",\r\n            q: this.state.query,\r\n            a: this.state.aggregationFunction,\r\n            col: this.state.aggregateColumn,\r\n        };\r\n\r\n        // Only pass defined dimensions. Pass Rows first, so draw order is correct.\r\n        var dimension = \"d\";\r\n        if (this.state.rows && this.state.rows.length > 0) {\r\n            addArrayParameters(parameters, dimension, this.state.rows);\r\n            dimension = String.fromCharCode(dimension.charCodeAt(0) + 1);\r\n        }\r\n\r\n        if (this.state.cols && this.state.cols.length > 0) {\r\n            addArrayParameters(parameters, dimension, this.state.cols);\r\n            dimension = String.fromCharCode(dimension.charCodeAt(0) + 1);\r\n        }\r\n\r\n        var queryString = buildUrlParameters(parameters);\r\n        return this.props.url + \"/table/\" + this.state.currentTable + queryString;\r\n    },\r\n    buildThisUrl: function (includeOpen) {\r\n        var relevantParams = {};\r\n\r\n        if (this.state.query) relevantParams.q = this.state.query;\r\n        if (this.state.currentTable) relevantParams.t = this.state.currentTable;\r\n\r\n        if (this.state.aggregationFunction !== \"COUNT\") {\r\n            relevantParams.af = this.state.aggregationFunction;\r\n            relevantParams.ac = this.state.aggregateColumn;\r\n        }\r\n\r\n        if (this.state.show !== \"both\") relevantParams.show = this.state.show;\r\n        if (this.state.showPortionOf !== \"total\") relevantParams.of = this.state.showPortionOf;\r\n        if (this.state.showPortionAs !== \"bar\") relevantParams.as = this.state.showPortionAs;\r\n        \r\n        if (this.state.rows && this.state.rows.length > 0) addArrayParameters(relevantParams, \"r\", this.state.rows);\r\n        if (this.state.cols && this.state.cols.length > 0) addArrayParameters(relevantParams, \"c\", this.state.cols);\r\n        if (this.state.rowLabels && this.state.rowLabels.length > 0) addArrayParameters(relevantParams, \"rl\", this.state.rowLabels);\r\n        if (this.state.colLabels && this.state.colLabels.length > 0) addArrayParameters(relevantParams, \"cl\", this.state.colLabels);\r\n\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname + buildUrlParameters(relevantParams);\r\n\r\n    },\r\n    addPivotClauses: function (set) {\r\n        for (var i = 0; i < this.state.pivotQueries.length; ++i) {\r\n            set[\"q\" + (i + 1)] = this.state.pivotQueries[i].q;\r\n            set[\"t\" + (i + 1)] = this.state.pivotQueries[i].t;\r\n        }\r\n    },\r\n    render: function () {\r\n        if (this.state.blockingErrorTitle) return <ErrorPage title={this.state.blockingErrorTitle} message={this.state.blockingErrorContent } />;\r\n\r\n        var headings = [];\r\n        var gridRows = [];\r\n\r\n        var mainContent = null;\r\n\r\n        if (this.state.gridData && this.state.gridData.content) {\r\n            var content = this.state.gridData.content;\r\n\r\n            var rows = this.state.rows.slice();\r\n            var rowLabels = this.state.rowLabels;\r\n            rows.push(\"All\");\r\n\r\n            var columns = this.state.cols.slice();\r\n            var colLabels = this.state.colLabels;\r\n            columns.push(\"All\");\r\n\r\n            headings.push(<GridFunctionCell key=\"AC\" aggregationFunction={this.state.aggregationFunction} aggregateColumn={this.state.aggregateColumn} allColumns={this.state.currentTableAllColumns} onChange={this.handleChangeAggregation} />);\r\n            for (var columnIndex = 0; columnIndex < columns.length; ++columnIndex) {\r\n                headings.push(<GridHeadingCell key={\"HC\" + columns[columnIndex]} type=\"column\" index={columnIndex} value={columns[columnIndex]} label={colLabels[columnIndex]} onChange={this.handleQueryChange } />);\r\n            }\r\n\r\n            for (var rowIndex = 0; rowIndex < rows.length; ++rowIndex) {\r\n                var cells = [];\r\n                cells.push(<GridHeadingCell key={\"HR\" + rows[rowIndex]} type=\"row\" index={rowIndex} value={rows[rowIndex]} label={rowLabels[rowIndex]} onChange={this.handleQueryChange} />);\r\n\r\n                for (var colIndex = 0; colIndex < columns.length; ++colIndex) {\r\n                    cells.push(<GridValueCell \r\n                                    key={\"C\" + colIndex + \"R\" + rowIndex} \r\n                                    colIndex={colIndex} \r\n                                    rowIndex={rowIndex} \r\n                                    content={content}\r\n                                    columnCount={columns.length} rowCount={rows.length}\r\n                                    show={this.state.show} showPortionAs={this.state.showPortionAs} showPortionOf={this.state.showPortionOf} />);\r\n                }\r\n\r\n                gridRows.push(<tr key={\"R\" + rowIndex }>{cells}</tr>);\r\n            }\r\n\r\n            var defaultQueries = [];\r\n            defaultQueries.push(<option key={\"SQNone\"} value=\"\"></option>);\r\n\r\n            for (var name in this.props.gridDefaultQueries) {\r\n                defaultQueries.push(<option key={\"SQ\" + name} value={name }>{name}</option>);\r\n            }\r\n\r\n            mainContent = (\r\n                <div className=\"grid\">\r\n                    <table className={this.state.showPortionOf}>\r\n                        <thead>\r\n                            <tr>                                \r\n                                {headings}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {gridRows}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"options\">\r\n                        Show&nbsp;\r\n                        <select value={this.state.show} onChange={this.handleChangeShow}>\r\n                            <option value=\"number\">Number</option>\r\n                            <option value=\"percentage\">Percentage</option>\r\n                            <option value=\"both\">Both</option>\r\n                        </select>\r\n                        &nbsp;of&nbsp;\r\n                        <select value={this.state.showPortionOf} onChange={this.handleChangeShowPortionOf}>\r\n                            <option value=\"total\">Total</option>\r\n                            <option value=\"row\">Row</option>\r\n                            <option value=\"col\">Column</option>\r\n                        </select>\r\n                        &nbsp;as&nbsp;\r\n                        <select value={this.state.showPortionAs} onChange={this.handleChangeShowPortionAs}>\r\n                            <option value=\"bar\">Bar</option>\r\n                            <option value=\"pie\">Pie</option>\r\n                        </select>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        Load&nbsp;\r\n                        <select value=\"\" onChange={this.handleSelectDefaultQuery}>\r\n                            {defaultQueries}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        var listingUrl = \"/\" + buildUrlParameters({ t: this.state.currentTable, q: this.state.query });\r\n\r\n        return (\r\n            <div className={\"viewport \" + configuration.theme} onKeyDown={this.handleKeyDown}>\r\n                <SearchHeader name={configuration.toolName}\r\n                              feedbackEmailAddresses={configuration.feedbackEmailAddresses}\r\n                              query={this.state.query}\r\n                              allColumns={this.state.currentTableAllColumns}\r\n                              onSearchChange={this.onSearchChange} />\r\n\r\n                <div className=\"middle\">\r\n                    <div className=\"mode theme-background-dark\">\r\n                        <a href={listingUrl}><i className=\"icon-details\" title=\"Listing\"></i></a>\r\n                        <a className=\"selected\"><i className=\"icon-view-all-albums\" title=\"Grid\"></i></a>\r\n                    </div>\r\n\r\n                    <div className=\"center\">\r\n                        <QueryStats error={this.state.error}\r\n                                    allCountData={this.state.allCountData}\r\n                                    selectedData={this.state.gridData}\r\n                                    currentTable={this.state.currentTable}\r\n                                    onSelectedTableChange={this.onSelectedTableChange} />\r\n\r\n                        <div className=\"scrollable\">\r\n                            {mainContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nif (document.getElementById(\"gridContainer\")) {\r\n    var params = getQueryStringParameters();\r\n    ReactDOM.render(\r\n        <GridMain \r\n            url={configuration.url} \r\n            gridDefaultQueries={configuration.gridDefaultQueries} \r\n            accessDeniedContent={configuration.accessDeniedContent}\r\n            serviceUnavailableContent={configuration.serviceUnavailableContent}\r\n            params={params}  />,\r\n        document.getElementById(\"gridContainer\")\r\n    );\r\n\r\n    document.title = configuration.toolName;\r\n}\r\n","﻿// NOTE: Depends on configuration from zConfiguration.jsx.\r\n\r\n// SearchMain wraps the overall search UI\r\nvar SearchMain = React.createClass({\r\n    getInitialState: function () {\r\n        return {\r\n            blockingErrorTitle: null,\r\n            blockingErrorContent: null,\r\n\r\n            tables: [],\r\n            allCountData: [],\r\n            listingData: [],\r\n            selectedItemData: null,\r\n\r\n            allItemCount: 0,\r\n\r\n            page: 0,\r\n            hasMoreData: false,\r\n\r\n            query: this.props.params.q || \"\",\r\n            pivotQueries: [],\r\n\r\n            currentTable: this.props.params.t,\r\n            currentTableIdColumn: \"\",\r\n            currentTableAllColumns: [],\r\n            currentListingColumns: [],\r\n            currentSortColumn: \"\",\r\n            currentSortOrder: \"\",\r\n\r\n            userSelectedTable: this.props.params.t,\r\n            userSelectedColumns: getParameterArrayForPrefix(this.props.params, \"c\"),\r\n            userSelectedSortColumn: this.props.params.ob,\r\n            userSelectedSortOrder: this.props.params.so,\r\n            userSelectedId: this.props.params.open\r\n        };\r\n    },\r\n    getClearedUserSelections: function () {\r\n        return {\r\n            userSelectedTable: null,\r\n            userSelectedColumns: [],\r\n            userSelectedSortColumn: null,\r\n            userSelectedSortOrder: null,\r\n            userSelectedId: null,\r\n            pivotQueries: []\r\n        };\r\n    },\r\n    componentDidMount: function () {\r\n        // Load table details\r\n        this.getTables(function () {\r\n            if (this.state.query) {\r\n                // If there's a query, run it\r\n                this.runSearch();\r\n            } else if (this.state.userSelectedId) {\r\n                // If there's an item to open, open it\r\n                this.getTableBasics();\r\n            }\r\n        });\r\n    },\r\n    handleKeyDown: function (e) {\r\n        // Backspace: Clear state *if query empty*\r\n        if (e.keyCode === 8) {\r\n            if (!this.state.query) {\r\n                var cleared = this.getClearedUserSelections();\r\n                cleared.allCountData = [];\r\n                cleared.listingData = [];\r\n                cleared.selectedItemData = null;\r\n\r\n                this.setState(cleared, this.setHistory);\r\n            }\r\n        }\r\n\r\n        // ESC: Close\r\n        if (e.keyCode === 27) {\r\n            this.onClose();\r\n            e.stopPropagation();\r\n        }\r\n\r\n        // Up/Down: Open Previous/Next\r\n        if (e.keyCode === 40 || e.keyCode === 38) {\r\n            var indexChange = (e.keyCode === 40 ? 1 : -1);\r\n            this.refs.list.selectByRelativeIndex(indexChange);\r\n            e.stopPropagation();\r\n        }\r\n    },\r\n    onSelectionChanged: function (e) {\r\n        this.setState({ userSelectedId: e }, this.getDetails);\r\n    },\r\n    onClose: function () {\r\n        this.setState({ userSelectedId: null }, this.setHistory);\r\n    },\r\n    onResort: function (sortColumn, sortOrder) {\r\n        // If a column heading was clicked, re-query with a new sort order\r\n        this.setState({ userSelectedTable: this.state.currentTable, userSelectedSortColumn: sortColumn, userSelectedSortOrder: sortOrder }, this.runSearch);\r\n    },\r\n    onAddClause: function (name, value) {\r\n        this.setState({ query: this.state.query + \" AND [\" + name + \"]=\\\"\" + value + \"\\\"\" }, this.runSearch);\r\n    },\r\n    onSetColumns: function (columns) {\r\n        this.setState({ userSelectedTable: this.state.currentTable, userSelectedColumns: columns }, this.runSearch);\r\n    },\r\n    onSelectedTableChange: function (name) {\r\n        if (this.state.currentTable === name) {\r\n            // If the selected table is clicked, just mark it actively selected and fix the URL\r\n            this.setState({ userSelectedTable: name }, this.setHistory);\r\n        } else {\r\n            // Otherwise, clear the columns/sort/sortOrder and query the new selected table\r\n            var cleared = this.getClearedUserSelections();\r\n            cleared.userSelectedTable = name;\r\n            cleared.currentTable = name;\r\n            this.setState(cleared, this.runSearch);\r\n        }\r\n\r\n    },\r\n    onPivot: function (table, baseQuery) {\r\n        var pivots = this.state.pivotQueries;\r\n        pivots.push({ q: this.state.query, t: this.state.currentTable });\r\n        this.setState({ pivotQueries: pivots, query: baseQuery, currentTable: table, userSelectedTable: table }, this.runSearch);\r\n    },\r\n    onSearchChange: function (e) {\r\n        this.setState({ query: e.target.value, userSelectedId: null }, this.delayedRunSearch);\r\n    },\r\n    delayedRunSearch: function () {\r\n        // Only query every 250 milliseconds while typing\r\n        if (!this.timer) {\r\n            this.timer = window.setTimeout(this.runSearch, 250);\r\n        }\r\n    },\r\n    runSearch: function () {\r\n        this.timer = null;\r\n        this.getAllCounts();\r\n        this.setHistory();\r\n    },\r\n    getTables: function (callback) {\r\n        // On Page load, find the list of known table names\r\n        jsonQuery(this.props.url,\r\n            function (data) {\r\n                this.setState({ tables: data.content, error: null }, callback);\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                if (status === 500 || status === 404) {\r\n                    this.setState({ blockingErrorTitle: \"Service Unavailable\", blockingErrorContent: this.props.serviceUnavailableContent });\r\n                } else {\r\n                    this.setState({ blockingErrorTitle: \"Access Denied\", blockingErrorContent: this.props.accessDeniedContent });\r\n                }\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this)\r\n        );\r\n    },\r\n    getAllCounts: function () {\r\n        // On query, ask for the count from every table.\r\n\r\n        // If there's no query, clear results and do nothing else\r\n        if (!this.state.query) {\r\n            var cleared = {};\r\n            cleared.allCountData = [];\r\n            cleared.listingData = [];\r\n            cleared.selectedItemData = null;\r\n\r\n            this.setState(cleared);\r\n            return;\r\n        }\r\n\r\n        var params = { q: this.state.query };\r\n        this.addPivotClauses(params);\r\n\r\n        // Get the count of matches from each accessible table\r\n        jsonQuery(\r\n            this.props.url + \"/allCount\",\r\n            function (data) {\r\n                var tableToShow = this.state.userSelectedTable;\r\n                if (!tableToShow) tableToShow = data.content[0].tableName;\r\n\r\n                this.setState({ allCountData: data, currentTable: tableToShow, error: null }, this.getTableBasics);\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                this.setState({ allCountData: [], listingData: [], selectedItemData: null,  error: \"Error: Server didn't respond to [\" + xhr.url + \"]. \" + err });\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this),\r\n            params\r\n        );\r\n    },\r\n    getTableBasics: function () {\r\n        // Once a table is selected, find out the columns and primary key column for the table\r\n        jsonQuery(this.props.url + \"/table/\" + this.state.currentTable,\r\n            function (data) {\r\n                var idColumn = \"\";\r\n\r\n                // Find the ID column\r\n                for (var j = 0; j < data.content.columns.length; ++j) {\r\n                    if (data.content.columns[j].isPrimaryKey) {\r\n                        idColumn = data.content.columns[j].name;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Choose columns, sort column, sort order\r\n                var defaultsForTable = (this.props.listingDefaults ? this.props.listingDefaults[this.state.currentTable] : null);\r\n                if (!defaultsForTable) defaultsForTable = {};\r\n\r\n                var columns = firstNonEmptyArray(this.state.userSelectedColumns, defaultsForTable.columns, [idColumn]);\r\n                var sortColumn = this.state.userSelectedSortColumn || defaultsForTable.sortColumn || idColumn;\r\n                var sortOrder = this.state.userSelectedSortOrder || defaultsForTable.sortOrder || \"asc\";\r\n\r\n                var next = function () {\r\n                    if (this.state.query) this.getResultsPage();\r\n                    if (this.state.userSelectedId) this.getDetails();\r\n                };\r\n\r\n                // Set the ID column, all columns, and listing columns\r\n                this.setState(\r\n                    {\r\n                        currentTableIdColumn: idColumn,\r\n                        currentTableAllColumns: data.content.columns,\r\n                        currentListingColumns: columns,\r\n                        currentSortColumn: sortColumn,\r\n                        currentSortOrder: sortOrder,\r\n                        error: null\r\n                    }, next);\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                this.setState({ allCountData: [], listingData: [], selectedItemData: null, error: \"Error: Server didn't respond to [\" + xhr.url + \"]. \" + err });\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this)\r\n        );\r\n    },\r\n    getResultsPage: function (i) {\r\n        // Once the counts query runs and table basics are loaded, get a page of results\r\n\r\n        // If there's no table, id column, or query, don't do anything yet\r\n        if (!this.state.query || !this.state.currentTable || !this.state.currentTableIdColumn) return;\r\n\r\n        // Get enough items to fill the requested page number (rather than trying to append one page)\r\n        if (!i) i = 0;\r\n        var pageSize = 50 * (i + 1);\r\n\r\n        // Get a page of matches for the given query for the desired columns and sort order, with highlighting.\r\n        jsonQuery(\r\n            this.buildQueryUrl() + \"&h=%CF%80&t=\" + pageSize,\r\n            function (data) {\r\n                this.setState({ listingData: data, hasMoreData: data.content.total > pageSize, page: i, error: null });\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                this.setState({ allCountData: [], listingData: [], selectedItemData: null, error: \"Error: Server didn't respond to [\" + xhr.url + \"]. \" + err });\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this)\r\n        );\r\n    },\r\n    getDetails: function () {\r\n        // When an item is selected, get details for it\r\n\r\n        // If there's no table or id column don't do anything yet\r\n        if (!this.state.currentTable || !this.state.currentTableIdColumn) return;\r\n\r\n        var detailsQuery = this.state.currentTableIdColumn + '=\"' + this.state.userSelectedId + '\"';\r\n        if (this.state.query) detailsQuery = detailsQuery + \" AND \" + this.state.query;\r\n\r\n        var params = {\r\n            q: detailsQuery,\r\n            c1: \"*\",\r\n            action: \"select\",\r\n            h: \"π\",\r\n            s: 0,\r\n            t: 1\r\n        };\r\n        this.addPivotClauses(params);\r\n\r\n        // Select all columns for the selected item, with highlighting\r\n        jsonQuery(\r\n            this.props.url + \"/table/\" + this.state.currentTable,\r\n            function (data) {\r\n                if (data.content.values) {\r\n                    this.setState({ selectedItemData: arribaRowToObject(data.content.values, 0) });\r\n                } else {\r\n                    if (!this.state.query) {\r\n                        this.setState({ selectedItemData: null, error: \"Item '\" + this.state.userSelectedId + \"' not found.\" })\r\n                    } else {\r\n                        this.setState({ selectedItemData: null, userSelectedId: null }, this.setHistory);\r\n                    }\r\n                }\r\n            }.bind(this),\r\n            function (xhr, status, err) {\r\n                this.setState({ allCountData: [], listingData: [], selectedItemData: null, error: \"Error: Server didn't respond to [\" + xhr.url + \"]. \" + err });\r\n                console.error(xhr.url, status, err.toString());\r\n            }.bind(this),\r\n            params\r\n        );\r\n\r\n        this.setHistory();\r\n    },\r\n    setHistory: function () {\r\n        var url = this.buildThisUrl(true);\r\n        if (url !== window.location.href) {\r\n            history.pushState(\"\", \"\", url);\r\n        }\r\n    },\r\n    buildQueryUrl: function () {\r\n        var parameters = {\r\n            action: \"select\",\r\n            q: this.state.query,\r\n            ob: this.state.currentSortColumn,\r\n            so: this.state.currentSortOrder,\r\n            s: 0\r\n        };\r\n\r\n        addArrayParameters(parameters, \"c\", this.state.currentListingColumns);\r\n        this.addPivotClauses(parameters);\r\n\r\n        var queryString = buildUrlParameters(parameters);\r\n        return this.props.url + \"/table/\" + this.state.currentTable + queryString;\r\n    },\r\n    buildThisUrl: function (includeOpen) {\r\n        var relevantParams = {};\r\n        this.addPivotClauses(relevantParams);\r\n\r\n        if (this.state.userSelectedTable) relevantParams.t = this.state.userSelectedTable;\r\n        if (this.state.query) relevantParams.q = this.state.query;        \r\n        if (this.state.userSelectedSortColumn) relevantParams.ob = this.state.userSelectedSortColumn;\r\n        if (this.state.userSelectedSortOrder === \"desc\") relevantParams.so = this.state.userSelectedSortOrder;\r\n\r\n        for (var i = 0; i < this.state.userSelectedColumns.length; ++i) {\r\n            relevantParams[\"c\" + (i + 1).toString()] = this.state.userSelectedColumns[i];\r\n        }\r\n\r\n        if (includeOpen && this.state.userSelectedId) {\r\n            relevantParams.open = this.state.userSelectedId;\r\n        }\r\n\r\n        return window.location.protocol + '//' + window.location.host + window.location.pathname + buildUrlParameters(relevantParams);\r\n    },\r\n    addPivotClauses: function (set) {\r\n        for (var i = 0; i < this.state.pivotQueries.length; ++i) {\r\n            set[\"q\" + (i + 1)] = this.state.pivotQueries[i].q;\r\n            set[\"t\" + (i + 1)] = this.state.pivotQueries[i].t;\r\n        }\r\n    },\r\n    render: function () {\r\n        if(this.state.blockingErrorTitle) return <ErrorPage title={this.state.blockingErrorTitle} message={this.state.blockingErrorContent} />;\r\n\r\n        var detailsView = null;\r\n        var customDetailsView = ResultDetails;\r\n        if (this.props.customDetailsProviders) customDetailsView = this.props.customDetailsProviders[this.state.currentTable] || customDetailsView;\r\n\r\n        detailsView = React.createElement(customDetailsView, { itemId: this.state.userSelectedId, table: this.state.currentTable, query: this.state.query, data: this.state.selectedItemData, onClose: this.onClose, onAddClause: this.onAddClause });\r\n\r\n        var mainContent = <SyntaxHelp showHelp={this.props.params.help} splashContent={configuration.splashContent} />;\r\n        if (this.state.query) {\r\n            mainContent = (\r\n                <SplitPane split=\"horizontal\" minSize=\"300\" isFirstVisible={this.state.listingData.content} isSecondVisible={this.state.userSelectedId}>\r\n                    <InfiniteScroll page={this.state.page} hasMoreData={this.state.hasMoreData} loadMore={this.getResultsPage }>\r\n                        <ResultListing ref={\"list\"}\r\n                            data={this.state.listingData}\r\n                            idColumn={this.state.currentTableIdColumn}\r\n                            allColumns={this.state.currentTableAllColumns}\r\n                            sortColumn={this.state.currentSortColumn}\r\n                            sortOrder={this.state.currentSortOrder}\r\n                            selectedId={this.state.userSelectedId}\r\n                            onResort={this.onResort}\r\n                            onSelectionChanged={this.onSelectionChanged}\r\n                            onSetColumns={this.onSetColumns}\r\n                            onPivot={this.onPivot} />\r\n                    </InfiniteScroll>\r\n                    <div className=\"scrollable\">\r\n                        {detailsView}\r\n                    </div>\r\n                </SplitPane>\r\n            );\r\n        }\r\n\r\n        var queryUrl = this.buildQueryUrl();\r\n        var baseUrl = this.buildThisUrl(false);\r\n        var rssUrl = queryUrl + \"&fmt=rss&t=100&iURL=\" + encodeURIComponent(baseUrl + \"&open=\");\r\n        var csvUrl = queryUrl + \"&fmt=csv&t=50000\";\r\n\r\n        var gridUrl = \"/Grid.html\" + buildUrlParameters({ t: this.state.currentTable, q: this.state.query });\r\n        if (!this.state.query) gridUrl = \"/Grid.html?p=Scorecard\";\r\n\r\n        return (\r\n            <div className={\"viewport \" + configuration.theme} onKeyDown={this.handleKeyDown}>\r\n                <SearchHeader name={configuration.toolName}\r\n                              feedbackEmailAddresses={configuration.feedbackEmailAddresses}\r\n                              query={this.state.query}\r\n                              tables={this.state.tables}\r\n                              allColumns={this.state.currentTableAllColumns}\r\n                              onSearchChange={this.onSearchChange} />\r\n\r\n                <div className=\"middle\">\r\n                    <nav className=\"mode theme-background-dark\">\r\n                        <a className=\"selected\"><i className=\"icon-details\"></i><span>Listing</span></a>\r\n                        <a href={gridUrl}><i className=\"icon-view-all-albums\"></i><span>Grid</span></a>\r\n                    </nav>\r\n\r\n                    <div className=\"center\">\r\n                        <QueryStats error={this.state.error}\r\n                                    allCountData={this.state.allCountData}\r\n                                    selectedData={this.state.listingData}\r\n                                    rssUrl={rssUrl}\r\n                                    csvUrl={csvUrl}\r\n                                    currentTable={this.state.currentTable}\r\n                                    onSelectedTableChange={this.onSelectedTableChange} />\r\n                    \r\n                        {mainContent}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nif (document.getElementById(\"searchContainer\")) {\r\n    var params = getQueryStringParameters();\r\n    ReactDOM.render(\r\n        <SearchMain \r\n            url={configuration.url} \r\n            listingDefaults={configuration.listingDefaults} \r\n            customDetailsProviders={configuration.customDetailsProviders} \r\n            accessDeniedContent={configuration.accessDeniedContent}\r\n            serviceUnavailableContent={configuration.serviceUnavailableContent}\r\n            params={params} />,\r\n        document.getElementById(\"searchContainer\")\r\n    );\r\n\r\n    document.title = configuration.toolName;\r\n}\r\n","﻿\r\n// Write a simple table with name and value for each property in a data set\r\nvar DetailsTable = React.createClass({\r\n    onAddClause: function (e) {\r\n        var name = e.target.getAttribute(\"data\");\r\n        this.props.onAddClause(name, stripHighlight(this.props.data[name]));\r\n    },\r\n    render: function () {\r\n        var details = [];\r\n\r\n        for (var name in this.props.data) {\r\n            var commands = [];\r\n            var rawValue = stripHighlight(this.props.data[name]);\r\n\r\n            // Add 'Pivot to Grid' URL\r\n            var gridUrl = \"Grid.html\" + buildUrlParameters({ q: this.props.query, t: this.props.table, R1: name + \">\" });\r\n            commands.push(<a href={gridUrl} className=\"icon-view-all-albums icon-column-heading\" title={\"Grid By \" + name} />);\r\n\r\n            var showAddClause = (this.props.onAddClause);\r\n            if (showAddClause && rawValue.length < 100) commands.push(<span className=\"icon-zoom icon-column-heading\" onClick={this.onAddClause} title=\"Add Clause to Query\" data={name} />);\r\n\r\n            var commandCell = null;\r\n            if (commands) {\r\n                var width =  (22 * commands.length) + \"px\";\r\n                commandCell = <td style={{ minWidth: width, width: width }}>{commands}</td>;\r\n            }\r\n\r\n            details.push(\r\n                <tr key={name}>\r\n                    {commandCell}\r\n                    <td>{name}</td>\r\n                    <td><div className=\"detailsValue\" dangerouslySetInnerHTML={highlight(this.props.data[name])} title={name + ':' + rawValue} /></td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <table className=\"detailsTable\">\r\n                <tbody>\r\n                    {details}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n});\r\n\r\n// An error page to show in place of all content when access is denied or the site is down.\r\nvar ErrorPage = React.createClass({\r\n    render: function () {\r\n        return (\r\n            <div className=\"errorPage\">\r\n                <h1>{this.props.title}</h1>\r\n                <article>\r\n                    <p>\r\n                        {this.props.message}\r\n                    </p>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n});"]}